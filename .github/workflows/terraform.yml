name: 'Terraform'

on:
  workflow_dispatch:
    inputs:
      question:
        description: 'Choose between apply and destroy'
        required: true
        default: 'apply'

permissions:
  contents: write
  pull-requests: write 
  issues: read
  packages: none

env:
 TF_LOG: INFO

jobs:
  terraform:
    name: 'Terraform Apply'
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.question == 'apply' }}

    defaults:
      run:
        shell: bash   
        working-directory: ./terraform     
    steps:

    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.6.5
        
    - name: Terraform Init
      id: init      
      env:
        ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
        ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      run: terraform init -upgrade

    - name: Terraform Format
      id: fmt      
      run: terraform fmt -check

    - name: Terraform Validate
      id: validate      
      run: terraform validate
    
    - name: Checkov GitHub Action
      id: checkov
      uses: bridgecrewio/checkov-action@v12
      with:
        directory: ./terraform
        output_format: cli,sarif
        output_file_path: console,results.sarif
        soft_fail: true

    - name: Upload SARIF file
      id: uploadcheckcov
      uses: github/codeql-action/upload-sarif@v3
      if: success() || failure()
      with:
        sarif_file: results.sarif

    - name: Terraform Plan
      id: plan
      env:
        ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
        ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
        TF_VAR_vm_admin_password: ${{ secrets.TF_VAR_vm_admin_password }}
      run: terraform plan -out apply.tfplan -var-file=student.tfvars

    - name: Terraform Apply      
      id: apply
      env:
        ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
        ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
        TF_VAR_vm_admin_password: ${{ secrets.TF_VAR_vm_admin_password }}
      run: terraform apply apply.tfplan

  terraform-destroy:
    name: 'Terraform Destroy'
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.question == 'destroy' }}
    
    defaults:
      run:
        shell: bash   
        working-directory: ./terraform     
    steps:
    
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.6.5
            
    - name: Terraform Init
      id: init      
      env:
        ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
        ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      run: terraform init -upgrade
    
 
    - name: Terraform Plan Destroy 
      id: plandestroy
      env:
        ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
        ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
        TF_VAR_vm_admin_password: ${{ secrets.TF_VAR_vm_admin_password }}
      run: terraform plan -destroy -out destroy.tfplan -var-file=student.tfvars
    
    - name: Terraform Apply Destroy     
      id: applydestroy
      env:
        ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
        ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
        TF_VAR_vm_admin_password: ${{ secrets.TF_VAR_vm_admin_password }}
      run: terraform apply destroy.tfplan
